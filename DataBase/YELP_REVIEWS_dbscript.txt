--README---
The below script contains database creation for YELP REVIEWS in POSTGRESSQL
Prerequisites:
1. Download POSTGRESSQL 9.6 from https://www.postgresql.org/download/
2. Check if PGAdmin is already installed with the above installation, if not download it
3. Open PgAdmin, COnnect to the local server database
4. Run the script below in the following order
	a. Create DATABASE
	b. Create SCHEMA within the database
	c. Create tables (3) inside the schema
5. Check if all tables are created succesfully.

Note: Public Database and Schema are not used we have created our own DB and Schema for this project

**********************************************SCRIPT START **************************************************
-- Database: YELP_DATA

-- DROP DATABASE "YELP_DATA";

CREATE DATABASE "YELP_DATA"
    WITH 
    OWNER = postgres
    ENCODING = 'UTF8'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1;
	

-- SCHEMA: YELP_SCHEMA
-- DROP SCHEMA "YELP_SCHEMA" ;

CREATE SCHEMA "YELP_SCHEMA"
    AUTHORIZATION postgres;
	
	
-- Table: "YELP_SCHEMA"."tblBusinessDataSearchAPI"

-- DROP TABLE "YELP_SCHEMA"."tblBusinessDataSearchAPI";

CREATE TABLE "YELP_SCHEMA"."tblBusinessDataSearchAPI"
(
    "businessID" text COLLATE "default".pg_catalog NOT NULL,
    "businessName" text COLLATE "default".pg_catalog NOT NULL,
    "businessURL" text COLLATE "default".pg_catalog NOT NULL,
    total_review_count integer,
    overal_rating integer,
    is_claimed boolean,
    city text COLLATE "default".pg_catalog,
    postal_code text COLLATE "default".pg_catalog,
    address text COLLATE "default".pg_catalog,
    "ID" integer NOT NULL DEFAULT nextval('"YELP_SCHEMA"."tblSearchAPIData_ID_seq"'::regclass),
    CONSTRAINT "pk_ID" PRIMARY KEY ("ID")
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE "YELP_SCHEMA"."tblBusinessDataSearchAPI"
    OWNER to postgres;
COMMENT ON TABLE "YELP_SCHEMA"."tblBusinessDataSearchAPI"
    IS 'Contains data collected from the SearchAPI of YELP';
	
	
	
-- Table: "YELP_SCHEMA"."tblReviewsScrapedData"

-- DROP TABLE "YELP_SCHEMA"."tblReviewsScrapedData";

CREATE TABLE "YELP_SCHEMA"."tblReviewsScrapedData"
(
    "ID" integer NOT NULL DEFAULT nextval('"YELP_SCHEMA"."tblReviewsScrapedData_ID_seq"'::regclass),
    "review_ID" text COLLATE "default".pg_catalog,
    review_rating integer,
    review_text text COLLATE "default".pg_catalog,
    review_date date,
    "businessID" integer,
    no_of_checkins integer,
    "UserID" integer,
    CONSTRAINT "tblReviewsScrapedData_pkey" PRIMARY KEY ("ID")
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE "YELP_SCHEMA"."tblReviewsScrapedData"
    OWNER to postgres;
COMMENT ON TABLE "YELP_SCHEMA"."tblReviewsScrapedData"
    IS 'Stores data specific to the review that is scraped from the website';
	

-- Table: "YELP_SCHEMA"."tblUserScrapedData"

-- DROP TABLE "YELP_SCHEMA"."tblUserScrapedData";

CREATE TABLE "YELP_SCHEMA"."tblUserScrapedData"
(
    "ID" integer NOT NULL DEFAULT nextval('"YELP_SCHEMA"."tblUserScrapedData_ID_seq"'::regclass),
    "siteUserID" text COLLATE "default".pg_catalog,
    "userName" text COLLATE "default".pg_catalog,
    "userLocationCity" text COLLATE "default".pg_catalog,
    total_no_of_reviews integer,
    "isEliteStatur" boolean,
    "hasProfilePicture" boolean,
    total_no_of_friends integer,
    "userLocationPinCode" text COLLATE "default".pg_catalog,
    CONSTRAINT "tblUserScrapedData_pkey" PRIMARY KEY ("ID")
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE "YELP_SCHEMA"."tblUserScrapedData"
    OWNER to postgres;
COMMENT ON TABLE "YELP_SCHEMA"."tblUserScrapedData"
    IS 'Stores data specific to the user for reviews scraped from the website';
	
	
**********************************************SCRIPT END **************************************************
